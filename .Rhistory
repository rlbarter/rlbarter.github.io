as.integer(0), n.donor.samples))
samples.aggregated.list <- split(samples.aggregated,
paste(samples.aggregated$organ, samples.aggregated$material.type))
write.xlsx(list(PLASMA = samples.aggregated.list[["kidney PLASMA"]],
PBMC = samples.aggregated.list[["kidney PBMC"]]),
file="kidney_aggregated_samples.xlsx")
write.xlsx(list(PLASMA = samples.aggregated.list[["liver PLASMA"]],
PBMC = samples.aggregated.list[["liver PBMC"]]),
file="liver_aggregated_samples.xlsx")
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
ungroup() %>%
summarise(matches = sum(donor.recipient.match))
samples.clean %>% filter(material.type %in% c("PLASMA")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
ungroup() %>%
summarise(matches = sum(donor.recipient.match))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
distinct(patient.id)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
dplyr::select(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D"))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(recipient.id,
donor.id)
samples.clean %>% filter(material.type %in% c("PLASMA")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
ungroup() %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(recipient.id,
donor.id)
head(samples.aggregated.list)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(recipient.id,
donor.id)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated.list,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples))
by = "recipient.id") %>%
group_by(material.type, recipient.id, donor.id) %>%
mutate(recipient.ACD.samples = sum(recipient.ACD.sample, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.sample, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.sample, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = "recipient.id") %>%
group_by(material.type, recipient.id, donor.id) %>%
mutate(recipient.ACD.samples = sum(recipient.ACD.sample, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.sample, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.sample, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = "recipient.id") %>%
group_by(material.type, recipient.id, donor.id) %>%
mutate(recipient.ACD.samples = sum(recipient.ACD.samples, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.samples, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.samples, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = "recipient.id") %>%
group_by(material.type, recipient.id, donor.id) %>%
summarise(recipient.ACD.samples = sum(recipient.ACD.samples, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.samples, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.samples, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = c("recipient.id", "material.type")) %>%
group_by(material.type, recipient.id, donor.id) %>%
summarise(recipient.ACD.samples = sum(recipient.ACD.samples, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.samples, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.samples, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
material.type,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = c("recipient.id", "material.type")) %>%
group_by(material.type, recipient.id, donor.id) %>%
summarise(recipient.ACD.samples = sum(recipient.ACD.samples, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.samples, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.samples, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T))
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(material.type,
recipient.id,
donor.id) %>%
left_join(dplyr::select(samples.aggregated,
material.type,
recipient.id = patient.id,
recipient.ACD.samples = n.samples.ACD,
recipient.EDTA.samples = n.samples.EDTA,
recipient.NaHep.samples = n.samples.NaHep,
donor.samples = n.donor.samples),
by = c("recipient.id", "material.type")) %>%
group_by(material.type, recipient.id, donor.id) %>%
summarise(recipient.ACD.samples = sum(recipient.ACD.samples, na.rm = T),
recipient.EDTA.samples = sum(recipient.EDTA.samples, na.rm = T),
recipient.NaHep.samples = sum(recipient.NaHep.samples, na.rm = T),
donor.samples = sum(donor.samples, na.rm = T)) %>% as.data.frame()
head(samples.aggregated)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(material.type,
recipient.id,
donor.id)
head(samples.clean)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(material.type,
recipient.id,
donor.id)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(material.type,
recipient.id,
donor.id,
time.points)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(material.type,
recipient.id,
donor.id)
samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(recipient.id,
donor.id)
pbmc.donor.recipient <- samples.clean %>% filter(material.type %in% c("PBMC")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
# identify the ids that have both a recipient and donor
group_by(id.agg) %>%
summarise(material.type = unique(material.type),
donor.recipient.match = n() == 2) %>%
filter(donor.recipient.match) %>%
# define a recipient and donor id
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
# remove any replicate rows
distinct(recipient.id,
donor.id)
plasma.donor.recipient <- samples.clean %>% filter(material.type %in% c("PLASMA")) %>%
distinct(patient.id, material.type) %>%
mutate(id.characters = str_length(patient.id)) %>%
# remove ids that are not 10 characters long and that don't end in R or D
filter(id.characters == 10, str_sub(patient.id, -1) %in% c("R", "D")) %>%
# identify the id without R or D at the end
mutate(id.agg = str_sub(patient.id, 1, -2)) %>%
group_by(id.agg) %>%
summarise(donor.recipient.match = n() == 2) %>%
ungroup() %>%
filter(donor.recipient.match) %>%
mutate(recipient.id = paste0(id.agg, "R"),
donor.id = paste0(id.agg, "D")) %>%
distinct(recipient.id,
donor.id)
write.xlsx(list(PLASMA = plasma.donor.recipient,
PBMC = pbmc.donor.recipient,
file="donor_recipient_with_samples.xlsx"))
write.xlsx(list(PLASMA = plasma.donor.recipient,
PBMC = pbmc.donor.recipient),
file="donor_recipient_with_samples.xlsx")
donor.status.orig <- box_read_csv("120380316859", fill = TRUE)
head(donor.status.orig)
donor.status.orig <- box_read_csv("140843100288", fill = TRUE)
head(donor.status.orig)
library(knitr)
library(ggplot2)
library(dplyr)
source("../../cleaning-scripts/1-clean_rejection_site_data.R")
source("../../cleaning-scripts/1_1-clean_rejection_central_data.R")
source("../../cleaning-scripts/2-clean_patient_data.R")
source("../../cleaning-scripts/3-clean_samples_data.R")
source("../../cleaning-scripts/4-clean_adverse_events_data.R")
source("../../cleaning-scripts/5-clean_demographics.R")
source("../../cleaning-scripts/6-clean_biopsy.R")
source("../../cleaning-scripts/7-transplant_date.R")
source("../../cleaning-scripts/8-cd4.R")
source("../../cleaning-scripts/9-medication.R")
source("../../cleaning-scripts/10-donor.R")
box_auth()
donor.status.orig <- box_read_csv("140843100288", fill = TRUE)
donor.status.clean <- donor.status.orig
colnames(donor.status.clean) <- c("site.id", "protocol", "patient.id",
"kidney.donor.status", "liver.donor.status")
donor.status.clean$patient.id <- gsub("-", "", donor.status.clean$patient.id)
donor.status.clean$kidney.donor.status <- factor(donor.status.clean$kidney.donor.status)
levels(donor.status.clean$kidney.donor.status)
setwd("~/Google Drive/Personal webpage/rlbarter.github.io/content")
blogdown::serve_site()
setwd("~/Google Drive/Personal webpage/rlbarter.github.io")
blogdown::serve_site()
